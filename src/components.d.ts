/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CreateUpdate {
        "_id": string;
    }
    interface ProofComponent {
    }
    interface ReadDelete {
    }
}
declare global {
    interface HTMLCreateUpdateElement extends Components.CreateUpdate, HTMLStencilElement {
    }
    var HTMLCreateUpdateElement: {
        prototype: HTMLCreateUpdateElement;
        new (): HTMLCreateUpdateElement;
    };
    interface HTMLProofComponentElement extends Components.ProofComponent, HTMLStencilElement {
    }
    var HTMLProofComponentElement: {
        prototype: HTMLProofComponentElement;
        new (): HTMLProofComponentElement;
    };
    interface HTMLReadDeleteElement extends Components.ReadDelete, HTMLStencilElement {
    }
    var HTMLReadDeleteElement: {
        prototype: HTMLReadDeleteElement;
        new (): HTMLReadDeleteElement;
    };
    interface HTMLElementTagNameMap {
        "create-update": HTMLCreateUpdateElement;
        "proof-component": HTMLProofComponentElement;
        "read-delete": HTMLReadDeleteElement;
    }
}
declare namespace LocalJSX {
    interface CreateUpdate {
        "_id"?: string;
    }
    interface ProofComponent {
    }
    interface ReadDelete {
    }
    interface IntrinsicElements {
        "create-update": CreateUpdate;
        "proof-component": ProofComponent;
        "read-delete": ReadDelete;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "create-update": LocalJSX.CreateUpdate & JSXBase.HTMLAttributes<HTMLCreateUpdateElement>;
            "proof-component": LocalJSX.ProofComponent & JSXBase.HTMLAttributes<HTMLProofComponentElement>;
            "read-delete": LocalJSX.ReadDelete & JSXBase.HTMLAttributes<HTMLReadDeleteElement>;
        }
    }
}
